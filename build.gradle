buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

apply plugin: 'scala'
apply plugin: "net.minecraftforge.gradle.forge"

ext.configFile = file('build.properties')
ext.config = parseConfig(configFile)

compileJava.options.encoding = 'UTF-8'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileScala {
    scalaCompileOptions.additionalParameters = ["-Xexperimental"]
}

version = config.mc_version + "-" + config.version + "-" + config.build_number
group = 'net.katsstuff'
archivesBaseName = "temporalGateway"

sourceSets.main.scala.srcDir "src/main/java" //Joint compilation
sourceSets.main.java.srcDirs = []

def fullForgeVersion = config.forge_version + "." + config.forge_buildnumber

minecraft {
    version = config.mc_version + "-" + fullForgeVersion
	if (file('../run1.11').exists()) {
		runDir = "../run1.11"
	} else {
		runDir = "run"
	}
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20161208"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
	
	replace '@VERSION@', project.version
	replaceIn 'LibMod.java'
}

repositories {
    mavenCentral()
    maven {
        name = 'sponge'
        url = 'http://repo.spongepowered.org/maven'
    }
}

dependencies {
    //We need sponge to do fine grained events for us
    compile "org.spongepowered:spongeforge:$config.mc_version-$config.forge_buildnumber-$config.sponge_api-$config.spongeforge_channel-$config.spongeforge_buildnumber:dev"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

//All config file stuff from Botania
task incrementBuildNumber(dependsOn: 'reobfJar') << {
	config.build_number = (config.build_number.toString().toInteger()) + 1
    configFile.withWriter {
        config.toProperties().store(it, "")
    }
}

def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}

idea{
    module{
        inheritOutputDirs = true
    }
}

jar {
    exclude "**/*.psd"
}

defaultTasks 'build', 'incrementBuildNumber'